<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=view_wview/2
y=view_hview/2
aktywna_ikona=0
roomy=ds_list_create()
max_level=objScreen_control.level_max div 10 -1//levele/10
//zwykle
ds_list_add(roomy,rmE1P1)
ds_list_add(roomy,rmE1P2)
ds_list_add(roomy,rmE1P3)
ds_list_add(roomy,rmE1P4)
ds_list_add(roomy,rmE1P5)
ds_list_add(roomy,rmE1P6)
ds_list_add(roomy,rmE1P7)
ds_list_add(roomy,rmE1P8)
ds_list_add(roomy,rmE1P9)
ds_list_add(roomy,rmE1P10)
ds_list_add(roomy,rmE1P11)
ds_list_add(roomy,rmE1P12)
ds_list_add(roomy,rmE1P13)
ds_list_add(roomy,rmE1P14)
ds_list_add(roomy,rmE1P15)
ds_list_add(roomy,rmE1P16)
ds_list_add(roomy,rmE1P17)
ds_list_add(roomy,rmE1P18)
ds_list_add(roomy,rmE1P19)
ds_list_add(roomy,rmE1P20)
ds_list_add(roomy,rmE1P21)
ds_list_add(roomy,rmE1P22)
ds_list_add(roomy,rmE1P23)
ds_list_add(roomy,rmE1P24)
ds_list_add(roomy,rmE1P25)
ds_list_add(roomy,rmE1P26)
ds_list_add(roomy,rmE1P27)
ds_list_add(roomy,rmE1P28)
ds_list_add(roomy,rmE1P29)
ds_list_add(roomy,rmE1P30)
ds_list_add(roomy,rmE1P31)
ds_list_add(roomy,rmE1P32)
ds_list_add(roomy,rmE1P33)
ds_list_add(roomy,rmE1P34)
ds_list_add(roomy,rmE1P35)
ds_list_add(roomy,rmE1P36)
ds_list_add(roomy,rmE1P37)
ds_list_add(roomy,rmE1P38)
ds_list_add(roomy,rmE1P39)
ds_list_add(roomy,rmE1P40)
//levele=(global.level-1)/10 div 1
_x=(global.level-11) div 10 * 672
_speed=0
ikona=false
_x_docel=0
for(i=0;i&lt;=5;i+=1)
{
_x_prev[i]=device_mouse_raw_x(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(roomy)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if aktywna_ikona=0
{
if mouse_check_button_pressed(mb_any)
{
    for(i=0;i&lt;=5;i+=1)
    {
        _x_prev[i]=device_mouse_raw_x(0)
    }
}
if !ikona{
if mouse_check_button(mb_any)
    _x=max(0,min(max_level*672+128,_x+_x_prev[0]-device_mouse_raw_x(0)))
else
    _x=max(0,min(max_level*672+128,_x+_speed))
if device_mouse_check_button_released(0,mb_any) and abs(_x_prev[5]-device_mouse_raw_x(0))&gt;20
    {
    _speed=(_x_prev[5]-device_mouse_raw_x(0))/100

    }
//
if _x!=_x div 672 * 672
{
    if _speed=0 or _x&gt;max_level*672
    {
        if point_distance(_x,0,_x div 672 * 672,0) &lt; point_distance(_x,0,_x div 672 * 672+ 672,0)
        {
            if point_distance(_x,0,_x div 672* 672,0)&gt;2
            _speed=-point_distance(_x,0,_x div 672* 672,0)/5
            else
            {
                _x= _x div 672 * 672
                _speed=0
                ikona=false
            }
        }
        else
        {
            if point_distance(_x,0,_x div 672* 672+672,0)&gt;2
            _speed=point_distance(_x,0,_x div 672* 672+672,0)/5
            else
            {
                _x= _x div 672 * 672+ 672
                _speed=0
                ikona=false
            }
        }
    }else if _speed&lt;15 and _speed&gt;-15
    {
        if _speed&lt;0
        {
            if point_distance(_x,0,_x div 672* 672,0)&lt;2
            {
                _x= _x div 672 * 672
                _speed=0
                ikona=false
            }else
            _speed=-point_distance(_x,0,_x div 672* 672,0)/5
        }else
        {
            if point_distance(_x,0,_x div 672* 672+672,0)&lt;2
            {
                _x= _x div 672 * 672 + 672
                _speed=0
                ikona=false
            }else
            _speed=point_distance(_x,0,_x div 672* 672+672,0)/5
        }
    }
    else 
    {
    _speed*=0.8
    }
}
}else if _x!=_x_docel
{
if point_distance(_x,0,_x_docel,0)&lt;5
{
    _x=_x_docel
    ikona=false
}
else 
{
    if _x-_x_docel&lt;0 _x+=max(15,point_distance(_x,0,_x_docel,0)/6)
    else _x-=max(15,point_distance(_x,0,_x_docel,0)/6)
}
}
//
if mouse_check_button(mb_any)
{
    for(i=5;i&gt;=1;i-=1)
    {
    _x_prev[i]=_x_prev[i-1]
    }
    _x_prev[0]=device_mouse_raw_x(0)
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if _x=_x div 672*672
{
if mouse_check_button_pressed(mb_any)
{
    for(xx=0;xx&lt;=4;xx+=1)
    {
        if device_mouse_x(0)&gt;x-2*128+128*xx-48 and device_mouse_x(0)&lt;x-2*128+128*xx+48 and device_mouse_y(0)&gt;y-67.2-48 and device_mouse_y(0)&lt;y-67.2+48
            aktywna_ikona=xx+1
        if device_mouse_x(0)&gt;x-2*128+128*xx-48 and device_mouse_x(0)&lt;x-2*128+128*xx+48 and device_mouse_y(0)&gt;y+67.2-48 and device_mouse_y(0)&lt;y+67.2+48
            aktywna_ikona=xx+6
        if device_mouse_x(0)&gt;room_width-128 and device_mouse_y(0)&lt;128 aktywna_ikona=11
        if device_mouse_x(0)&lt;128 and device_mouse_y(0)&lt;128 aktywna_ikona=-1
    }
}
if mouse_check_button_released(mb_any) and aktywna_ikona!=0
{
    if aktywna_ikona!=11 and aktywna_ikona!=-1
    {
    for(xx=0;xx&lt;=4;xx+=1)
    {
        if device_mouse_x(0)&gt;x-2*128+128*xx-48 and device_mouse_x(0)&lt;x-2*128+128*xx+48 and device_mouse_y(0)&gt;y-67.2-48 and device_mouse_y(0)&lt;y-67.2+48
        {
            if aktywna_ikona=xx+1 and ds_list_find_value(objScreen_control.dostempne_levele,xx+10+_x/67.2)
            {
                global._lives=6
                global.level=xx+11+_x/67.2
                room_goto(ds_list_find_value(roomy,xx+_x/67.2))
            }
        }
        if device_mouse_x(0)&gt;x-2*128+128*xx-48 and device_mouse_x(0)&lt;x-2*128+128*xx+48 and device_mouse_y(0)&gt;y+67.2-48 and device_mouse_y(0)&lt;y+67.2+48
        {
            if aktywna_ikona=xx+6 and ds_list_find_value(objScreen_control.dostempne_levele,xx+15+_x/67.2)
            {
                global._lives=6
                global.level=xx+16+_x/67.2
                room_goto(ds_list_find_value(roomy,xx+5+_x/67.2))
            }
        }
    }
    audio_play_sound(sndKlick,0,0)
    }else if _x=_x div 672*672
    {
        if device_mouse_x(0)&gt;room_width-128 and device_mouse_y(0)&lt;128 and aktywna_ikona=11 and _x&lt;max_level*672 
        {
        _x_docel=_x div 672* 672 +672
        ikona=true
        audio_play_sound(sndKlick,0,0)
        }
        if device_mouse_x(0)&lt;128 and device_mouse_y(0)&lt;128 and aktywna_ikona=-1 and _x&gt;0
        {
        _x_docel=_x div 672* 672 -672
        ikona=true
        audio_play_sound(sndKlick,0,0)
        }
    }
    aktywna_ikona=0
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var scale,ii,iy;
//lvl dodatkowe
/*
ii=0
iy=0
repeat(2)
{
for(xx=0;xx&lt;=4;xx+=1)
{
var _xx=x-2*128+128*xx
if aktywna_ikona=xx+ii+1
{
    draw_sprite_ext(sprLevelH,1,-_x+_xx,y-64+iy,1,1,0,-1,1)
    scale=1
}
else 
{
    draw_sprite_ext(sprLevelH,0,-_x+_xx,y-64+iy,1,1,0,-1,1)
    scale=0.75
}
if max_level&lt;=xx+ii draw_sprite(sprLevel,2,-_x+_xx,y-64+iy)
else
{
if !ds_list_find_value(objScreen_control.dostempne_levele,xx+ii) 
{
draw_set_valign(fa_center)
draw_set_halign(fa_center)
draw_set_color(c_white)
draw_sprite_ext(sprKludka,-1,-_x+x-2*128+128*xx,y-64+iy-15,scale*2,scale*2,-30,-1,1)
draw_sprite_ext(sprGwiazdka2,-1,-_x+x-2*128+128*xx-20,y-64+iy+25,scale*0.5,scale*0.5,10,-1,1)
draw_text(-_x+x-2*128+128*xx+20,y-64+iy+26,"x"+string((xx+ii)*23+23))
draw_text(-_x+x-2*128+128*xx-25,y-64+iy-25,xx+ii+1)
}
else
{
draw_set_valign(fa_center)
draw_set_halign(fa_center)
if !ds_list_find_value(objScreen_control.dostempne_levele,xx+ii) and aktywna_ikona=xx+ii+1 draw_set_color(c_red)
else draw_set_color(c_white)
draw_set_font(font0)
draw_text(-_x+x-2*128+128*xx,y-64-8+iy,xx+ii+1)
//rysowanie poświaty
if ds_list_find_value(objScreen_control.punkty,xx+ii)&gt;=100
{
draw_sprite_ext(sprGwiazdka,2,-_x+_xx-28*scale,y-64+27*scale+iy,0.4*scale,-0.4*scale,0,-1,1)
if ds_list_find_value(objScreen_control.punkty,xx+ii)&gt;=200
{
draw_sprite_ext(sprGwiazdka,2,-_x+_xx,y-64+20*scale+iy,0.4*scale,-0.4*scale,0,-1,1)
if ds_list_find_value(objScreen_control.punkty,xx+ii)&gt;=300
draw_sprite_ext(sprGwiazdka,2,-_x+_xx+28*scale,y-64+27*scale+iy,0.4*scale,-0.4*scale,0,-1,1)
}
}
draw_sprite_ext(sprGwiazdka,0,-_x+_xx-28*scale,y-64+27*scale+iy,0.4*scale,-0.4*scale,0,-1,1)//szara lewa
draw_sprite_ext(sprGwiazdka,0,-_x+_xx+28*scale,y-64+27*scale+iy,0.4*scale,-0.4*scale,0,-1,1)//szara prawa
draw_sprite_part_ext(sprGwiazdka,1,9,9,100,95*min(max(0,min(ds_list_find_value(objScreen_control.punkty,xx+ii),100)/100),1),-_x+_xx-28*scale-(45*0.4*scale),y-64+27*scale+(43*0.4*scale)+iy,0.4*scale,-0.4*scale,-1,1)
draw_sprite_part_ext(sprGwiazdka,1,9,9,100,95*min(max(0,(ds_list_find_value(objScreen_control.punkty,xx+ii)-200)/100),1),-_x+_xx+28*scale-(45*0.4*scale),y-64+27*scale+(43*0.4*scale)+iy,0.4*scale,-0.4*scale,-1,1)
draw_sprite_ext(sprGwiazdka,0,-_x+_xx,y-64+20*scale+iy,0.4*scale,-0.4*scale,0,-1,1)//szara srodkowa
draw_sprite_part_ext(sprGwiazdka,1,9,9,100,95*min(max(0,min(ds_list_find_value(objScreen_control.punkty,xx+ii)-100,100))/100,1),-_x+_xx-(45*0.4*scale),y-64+20*scale+(43*0.4*scale)+iy,0.4*scale,-0.4*scale,-1,1)
}
}
}
ii+=5
iy+=128
}*/
//zwykle lvl
for(iii=0;iii&lt;=max_level;iii+=1)
{
ii=0
iy=0
repeat(2)
{
for(xx=0;xx&lt;=4;xx+=1)// id kafelki w pionie
{
var _xx=x-2*128+128*xx//x pierwszej kafelki
if aktywna_ikona=xx+ii+1
{
    draw_sprite(sprLevel,1,-_x+iii*672+_xx,y-64+iy)
    if !ds_list_find_value(objScreen_control.dostempne_levele,xx+ii+(iii+1)*10) 
    {
    draw_set_color(c_red)
    draw_rectangle(-_x+x-2*128+128*xx-63+iii*672,y-64-63+iy,-_x+x-2*128+128*xx+62+iii*672,y-64+62+iy,1)
    }
    scale=1
}
else 
{
    draw_sprite(sprLevel,0,-_x+_xx+iii*672,y-64+iy)
    scale=0.75
}
if !ds_list_find_value(objScreen_control.dostempne_levele,xx+ii+(iii+1)*10) draw_sprite_ext(sprKludka,-1,-_x+x-2*128+128*xx+iii*672,y-64+25+iy,scale,scale,0,-1,1)
else
{
//rysowanie poświaty
if ds_list_find_value(objScreen_control.punkty,xx+ii+(iii+1)*10)&gt;=100
{
draw_sprite_ext(sprGwiazdka,2,-_x+_xx-28*scale+iii*672,y-64+27*scale+iy,0.4*scale,-0.4*scale,0,-1,1)
if ds_list_find_value(objScreen_control.punkty,xx+ii+(iii+1)*10)&gt;=200
{
draw_sprite_ext(sprGwiazdka,2,-_x+_xx+iii*672,y-64+20*scale+iy,0.4*scale,-0.4*scale,0,-1,1)
if ds_list_find_value(objScreen_control.punkty,xx+ii+(iii+1)*10)&gt;=300
draw_sprite_ext(sprGwiazdka,2,-_x+_xx+28*scale+iii*672,y-64+27*scale+iy,0.4*scale,-0.4*scale,0,-1,1)
}
}
draw_sprite_ext(sprGwiazdka,0,-_x+_xx-28*scale+iii*672,y-64+27*scale+iy,0.4*scale,-0.4*scale,0,-1,1)//szara lewa
draw_sprite_ext(sprGwiazdka,0,-_x+_xx+28*scale+iii*672,y-64+27*scale+iy,0.4*scale,-0.4*scale,0,-1,1)//szara prawa
draw_sprite_part_ext(sprGwiazdka,1,9,9,100,95*min(max(0,min(ds_list_find_value(objScreen_control.punkty,xx+ii+(iii+1)*10),100)/100),1),-_x+_xx-28*scale-(45*0.4*scale)+iii*672,y-64+27*scale+(43*0.4*scale)+iy,0.4*scale,-0.4*scale,-1,1)
draw_sprite_part_ext(sprGwiazdka,1,9,9,100,95*min(max(0,(ds_list_find_value(objScreen_control.punkty,xx+ii+(iii+1)*10)-200)/100),1),-_x+_xx+28*scale-(45*0.4*scale)+iii*672,y-64+27*scale+(43*0.4*scale)+iy,0.4*scale,-0.4*scale,-1,1)
draw_sprite_ext(sprGwiazdka,0,-_x+_xx+iii*672,y-64+20*scale+iy,0.4*scale,-0.4*scale,0,-1,1)//szara srodkowa
draw_sprite_part_ext(sprGwiazdka,1,9,9,100,95*min(max(0,min(ds_list_find_value(objScreen_control.punkty,xx+ii+(iii+1)*10)-100,100))/100,1),-_x+_xx-(45*0.4*scale)+iii*672,y-64+20*scale+(43*0.4*scale)+iy,0.4*scale,-0.4*scale,-1,1)
}
draw_set_valign(fa_center)
draw_set_halign(fa_center)
if !ds_list_find_value(objScreen_control.dostempne_levele,xx+ii+(iii+1)*10) and aktywna_ikona=xx+ii+1 draw_set_color(c_red)
else draw_set_color(c_white)
draw_set_font(font0)
draw_text(-_x+x-2*128+128*xx+iii*672,y-64-8+iy,xx+ii+1+iii*10)
}
ii+=5
iy+=128
}
}
/*
//
if aktywna_ikona=xx+6
{
    draw_sprite(sprLevel,1,-_x+_xx,y+64)
    if !ds_list_find_value(objScreen_control.dostempne_levele,xx+5+10*levele) 
    {
    draw_set_color(c_red)
    draw_rectangle(-_x+x-2*128+128*xx-63,y+64-63,x-2*128+128*xx+62,y+64+62,1)
    }
    scale=1
}
else 
{
draw_sprite(sprLevel,0,-_x+_xx,y+64)
scale=0.75
}
if !ds_list_find_value(objScreen_control.dostempne_levele,xx+5+10*levele) draw_sprite_ext(sprKludka,-1,-_x+x-2*128+128*xx,y+64+25,scale,scale,0,-1,1)
else
{
var _xx=x-2*128+128*xx
//rysowanie poświaty
if ds_list_find_value(objScreen_control.punkty,xx+5+10*levele)&gt;=100
{
draw_sprite_ext(sprGwiazdka,2,-_x+_xx-28*scale,y+64+27*scale,0.4*scale,-0.4*scale,0,-1,1)
if ds_list_find_value(objScreen_control.punkty,xx+5+10*levele)&gt;=200
{
draw_sprite_ext(sprGwiazdka,2,-_x+_xx,y+64+20*scale,0.4*scale,-0.4*scale,0,-1,1)
if ds_list_find_value(objScreen_control.punkty,xx+5+10*levele)&gt;=300
draw_sprite_ext(sprGwiazdka,2,-_x+_xx+28*scale,y+64+27*scale,0.4*scale,-0.4*scale,0,-1,1)
}
}
draw_sprite_ext(sprGwiazdka,0,-_x+_xx-28*scale,y+64+27*scale,0.4*scale,-0.4*scale,0,-1,1)//szara lewa
draw_sprite_ext(sprGwiazdka,0,-_x+_xx+28*scale,y+64+27*scale,0.4*scale,-0.4*scale,0,-1,1)//szara prawa
draw_sprite_part_ext(sprGwiazdka,1,9,9,100,95*min(max(0,min(ds_list_find_value(objScreen_control.punkty,xx+5+10*levele),100)/100),1),-_x+_xx-28*scale-(45*0.4*scale),y+64+27*scale+(43*0.4*scale),0.4*scale,-0.4*scale,-1,1)
draw_sprite_part_ext(sprGwiazdka,1,9,9,100,95*min(max(0,(ds_list_find_value(objScreen_control.punkty,xx+5+10*levele)-200)/100),1),-_x+_xx+28*scale-(45*0.4*scale),y+64+27*scale+(43*0.4*scale),0.4*scale,-0.4*scale,-1,1)
draw_sprite_ext(sprGwiazdka,0,-_x+_xx,y+64+20*scale,0.4*scale,-0.4*scale,0,-1,1)//szara srodkowa
draw_sprite_part_ext(sprGwiazdka,1,9,9,100,95*min(max(0,min(ds_list_find_value(objScreen_control.punkty,xx+5+10*levele)-100,100))/100,1),-_x+_xx-(45*0.4*scale),y+64+20*scale+(43*0.4*scale),0.4*scale,-0.4*scale,-1,1)
}
draw_set_valign(fa_center)
draw_set_halign(fa_center)
if !ds_list_find_value(objScreen_control.dostempne_levele,xx+5+10*levele) and aktywna_ikona=xx+6 draw_set_color(c_red)
else draw_set_color(c_white)
draw_text(-_x+x-2*128+128*xx,y+64-8,xx+6+10*levele)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
if _x=_x div 672*672 i=1
else i=.5
if _x&lt;max_level*672
draw_sprite_ext(sprStrzalka_duza,-1,room_width-64,70,1,1,0,-1,i)
if _x&gt;0
draw_sprite_ext(sprStrzalka_duza,-1,64,70,-1,1,0,-1,i)
for(ix=0;ix&lt;=max_level;ix+=1)
{
for(iy=0;iy&lt;room_height;iy+=16)
{
draw_sprite_ext(sprLevel_sciana,0,-_x+ix*672-16,iy,1,1,0,-1,0.8)
draw_sprite_ext(sprLevel_sciana,0,-_x+ix*672+672-16,iy,-1,1,0,-1,0.8)
}
}
draw_set_color(c_black)
draw_rectangle(-_x+(objScreen_control.level_max)*67.2-16,0,room_width,room_height,0)
draw_sprite_ext(sprCommingsoon,0,-_x+(objScreen_control.level_max)*67.2+25,room_height/2,1.5,1.5,0,-1,1)
draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
